/**
 * ember-parallel - v0.0.1
 * Copyright: 2014 Ben Gillies
 * License: BSD License (see https://raw.github.com/bengillies/ember-parallel/master/LICENSE)
 */

Em.Object.reopen({toJSON:function(){var a,b=[],c={};if(this.toArray)return this.toArray().map(function(a){return a&&a.toJSON?a.toJSON:a});for(var d in this)a=this[d],"toString"!==a&&"function"!==Ember.typeOf(a)&&"class"!==Em.typeOf(a)&&"concatenatedProperties"!==d&&"isDestroyed"!==d&&"isDestroying"!==d&&(a&&a.toArray?c[d]=a.toArray().map(function(a){return a&&a.toJSON?a.toJSON():a}):a&&a.toJSON&&(c[d]=a.toJSON()),b.push(d));return $.extend(this.getProperties.apply(this,b),c)}}),Em.JSONify=function(a){return a?a.toJSON?a.toJSON():a.toArray?a.toArray().map(function(a){return a&&a.toJSON?a.toJSON():a}):void 0:a},Em.computed.parallel={map:function(a,b){return Em.computed.promise([],function(){return new Parallel(Em.JSONify(this.get(a))).map(b)})},reduce:function(a,b,c){return Em.computed.promise(c,function(){return new Parallel(Em.JSONify(this.get(a))).reduce(b)})},spawn:function(a,b,c){return Em.computed.promise(c,function(){return new Parallel(Em.JSONify(this.get(a))).spawn(b)})}},Em.computed.promise=function(a,b){return"undefined"==typeof b&&(b=a,a=void 0),Em.computed(function(c,d){if(2==arguments.length)return d;var e=this;return e.set(c+"Promise",new Em.RSVP.Promise(function(a){a(b.call(e))}).then(function(a){return e.get(c)!==a&&e.set(c,a),a})),a})};